@article{ciavotta_architectural_2022,
	title = {Architectural {Design} of {Cloud} {Applications}: {A} {Performance}-{Aware} {Cost} {Minimization} {Approach}},
	volume = {10},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {2168-7161, 2372-0018},
	shorttitle = {Architectural {Design} of {Cloud} {Applications}},
	url = {https://ieeexplore.ieee.org/document/9164994/},
	doi = {10.1109/TCC.2020.3015703},
	language = {en},
	number = {3},
	urldate = {2024-08-04},
	journal = {IEEE Transactions on Cloud Computing},
	author = {Ciavotta, Michele and Gibilisco, Giovanni Paolo and Ardagna, Danilo and Nitto, Elisabetta Di and Lattuada, Marco and Da Silva, Marcos Aurelio Almeida},
	month = jul,
	year = {2022},
	keywords = {IEEE Explore},
	pages = {1571--1591},
	file = {PDF:C\:\\Users\\antom\\Zotero\\storage\\PY3PTPTT\\Ciavotta et al. - 2022 - Architectural Design of Cloud Applications A Performance-Aware Cost Minimization Approach.pdf:application/pdf},
}

@inproceedings{guerriero_model-driven_2015,
	address = {Timisoara, Romania},
	title = {A {Model}-{Driven} {DevOps} {Framework} for {QoS}-{Aware} {Cloud} {Applications}},
	isbn = {978-1-5090-0461-4},
	url = {http://ieeexplore.ieee.org/document/7426104/},
	doi = {10.1109/SYNASC.2015.60},
	abstract = {Recently we witnessed a deep transformation in the the design, development and management of modern applications, which have grown in scope and size becoming distributed and service-oriented. A big part in this metamorphosis is played by the Cloud with the availability of almost-inÔ¨Ånite resources, high availability and outsourced maintenance. This has led to the emergence of new software development methodologies to effectively deal with this paradigm shift in the Ô¨Åeld of software engineering. DevOps is one of them, it advocates for a greater level of collaboration and convergence between developers and other IT professionals. Consequently, new tools, purposely designed to ease this process, are required. In this scenario, we present SPACE4Cloud, a DevOps integrated environment for model-driven design-time quality of service assessment and optimization, and runtime capacity allocation of Cloud applications.},
	language = {en},
	urldate = {2024-07-24},
	booktitle = {2015 17th {International} {Symposium} on {Symbolic} and {Numeric} {Algorithms} for {Scientific} {Computing} ({SYNASC})},
	publisher = {IEEE},
	author = {Guerriero, Michele and Ciavotta, Michele and Gibilisco, Giovanni Paolo and Ardagna, Danilo},
	month = sep,
	year = {2015},
	keywords = {IEEE Explore},
	pages = {345--351},
	file = {Guerriero et al. - 2015 - A Model-Driven DevOps Framework for QoS-Aware Clou.pdf:C\:\\Users\\antom\\Zotero\\storage\\JQ2E89VI\\Guerriero et al. - 2015 - A Model-Driven DevOps Framework for QoS-Aware Clou.pdf:application/pdf},
}

@article{soldani__2021,
	title = {The \textit{Œº} {TOSCA} toolchain: {Mining}, analyzing, and refactoring microservice‚Äêbased architectures},
	volume = {51},
	issn = {0038-0644, 1097-024X},
	shorttitle = {The \textit{Œº} {TOSCA} toolchain},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/spe.2974},
	doi = {10.1002/spe.2974},
	abstract = {Exploiting microservices to architect enterprise applications is becoming commonplace. This makes it crucial to provide some support for designing and analyzing microservice-based applications, for example, for understanding whether a microservice-based application adheres to the main design principles of microservices and for choosing how to refactor it when this is not the case. To provide such support, in this article we present the ùúáTOSCA toolchain. More precisely, we first introduce the ùúáTOSCA model to represent the architecture of microservice-based applications with the OASIS standard TOSCA. We then describe a technique to automatically mine the architecture of a microservice-based application and represent it with ùúáTOSCA, given the Kubernetes deployment of the application. We also present a methodology to analyze the ùúáTOSCA representation of a microservice-based architecture to systematically identify the architectural smells potentially affecting the corresponding application and to resolve them. Finally, we present two prototype tools, ùúáMiner and ùúáFreshener, implementing our mining solution and the support for identifying and resolving architectural smells in microservice-based applications, respectively. We then assess ‚Äîby discussing some case studies‚Äî how effectively ùúáMiner, ùúáFreshener, and the ùúáTOSCA toolchain can support researchers and practitioners working with microservices.},
	language = {en},
	number = {7},
	urldate = {2024-07-29},
	journal = {Software: Practice and Experience},
	author = {Soldani, Jacopo and Muntoni, Giuseppe and Neri, Davide and Brogi, Antonio},
	month = jul,
	year = {2021},
	pages = {1591--1621},
	file = {Soldani et al. - 2021 - The Œº TOSCA toolchain Mining, analyzing, a.pdf:C\:\\Users\\antom\\Zotero\\storage\\CTK9UTDK\\Soldani et al. - 2021 - The Œº TOSCA toolchain Mining, analyzing, a.pdf:application/pdf},
}

@article{lin_modeling_2021,
	title = {Modeling and {Optimization} of {Performance} and {Cost} of {Serverless} {Applications}},
	volume = {32},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {1045-9219, 1558-2183, 2161-9883},
	url = {https://ieeexplore.ieee.org/document/9214428/},
	doi = {10.1109/TPDS.2020.3028841},
	abstract = {Function-as-a-Service (FaaS) and serverless applications have proliferated signiÔ¨Åcantly in recent years because of their high scalability, ease of resource management, and pay-as-you-go pricing model. However, cloud users are facing practical problems when they migrate their applications to the serverless pattern, which are the lack of analytical performance and billing model and the trade-off between limited budget and the desired quality of service of serverless applications. In this article, we Ô¨Åll this gap by proposing and answering two research questions regarding the prediction and optimization of performance and cost of serverless applications. We propose a new construct to formally deÔ¨Åne a serverless application workÔ¨Çow, and then implement analytical models to predict the average end-to-end response time and the cost of the workÔ¨Çow. Consequently, we propose a heuristic algorithm named Probability ReÔ¨Åned Critical Path Greedy algorithm (PRCP) with four greedy strategies to answer two fundamental optimization questions regarding the performance and the cost. We extensively evaluate the proposed models by conducting experimentation on AWS Lambda and Step Functions. Our analytical models can predict the performance and cost of serverless applications with more than 98 percent accuracy. The PRCP algorithms can achieve the optimal conÔ¨Ågurations of serverless applications with 97 percent accuracy on average.},
	language = {en},
	number = {3},
	urldate = {2024-07-29},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Lin, Changyuan and Khazaei, Hamzeh},
	month = mar,
	year = {2021},
	keywords = {IEEE Explore},
	pages = {615--632},
	file = {Lin and Khazaei - 2021 - Modeling and Optimization of Performance and Cost .pdf:C\:\\Users\\antom\\Zotero\\storage\\ND9RDZU8\\Lin and Khazaei - 2021 - Modeling and Optimization of Performance and Cost .pdf:application/pdf},
}

@article{tankovic_elaclo_2017,
	title = {{ElaClo}: {A} framework for optimizing software application topology in the cloud environment},
	volume = {90},
	issn = {09574174},
	shorttitle = {{ElaClo}},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0957417417304700},
	doi = {10.1016/j.eswa.2017.07.001},
	language = {en},
	urldate = {2024-07-24},
	journal = {Expert Systems with Applications},
	author = {Tankoviƒá, Nikola and Galinac Grbac, Tihana and ≈Ωagar, Mario},
	month = dec,
	year = {2017},
	keywords = {Sciencedirect},
	pages = {62--86},
	file = {Tankoviƒá et al. - 2017 - ElaClo A framework for optimizing software applic.pdf:C\:\\Users\\antom\\Zotero\\storage\\IGFQXW33\\Tankoviƒá et al. - 2017 - ElaClo A framework for optimizing software applic.pdf:application/pdf},
}

@incollection{le_goues_multi-model_2014,
	address = {Cham},
	title = {A {Multi}-model {Optimization} {Framework} for the {Model} {Driven} {Design} of {Cloud} {Applications}},
	volume = {8636},
	isbn = {978-3-319-09939-2 978-3-319-09940-8},
	url = {http://link.springer.com/10.1007/978-3-319-09940-8_5},
	abstract = {The rise and adoption of the Cloud computing paradigm had a strong impact on the ICT world in the last few years; this technology has now reached maturity and Cloud providers offer a variety of solutions and services to their customers. However, beside the advantages, Cloud computing introduced new issues and challenges. In particular, the heterogeneity of the Cloud services offered and their relative pricing models makes the identiÔ¨Åcation of a deployment solution that minimizes costs and guarantees QoS very complex. Performance assessment of Cloud based application needs for new models and tools to take into consideration the dynamism and multi-tenancy intrinsic of the Cloud environment. The aim of this work is to provide a novel mixed integer linear program (MILP) approach to Ô¨Ånd a minimum cost feasible cloud conÔ¨Åguration for a given cloud based application. The feasibility of the solution is considered with respect to some non-functional requirements that are analyzed through multiple performance models with different levels of accuracy. The initial solution is further improved by a local search based procedure. The quality of the initial feasible solution is compared against Ô¨Årst principle heuristics currently adopted by practitioners and Cloud providers.},
	language = {en},
	urldate = {2024-07-24},
	booktitle = {Search-{Based} {Software} {Engineering}},
	publisher = {Springer International Publishing},
	author = {Ardagna, Danilo and Gibilisco, Giovanni Paolo and Ciavotta, Michele and Lavrentev, Alexander},
	editor = {Le Goues, Claire and Yoo, Shin},
	year = {2014},
	doi = {10.1007/978-3-319-09940-8_5},
	note = {Series Title: Lecture Notes in Computer Science},
	keywords = {Springer},
	pages = {61--76},
	file = {Ardagna et al. - 2014 - A Multi-model Optimization Framework for the Model.pdf:C\:\\Users\\antom\\Zotero\\storage\\MSJLT4ZE\\Ardagna et al. - 2014 - A Multi-model Optimization Framework for the Model.pdf:application/pdf},
}

@article{de_gouw_modeling_2019,
	title = {On the modeling of optimal and automatized cloud application deployment},
	volume = {107},
	issn = {23522208},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S235222081830138X},
	doi = {10.1016/j.jlamp.2019.06.001},
	language = {en},
	urldate = {2024-07-24},
	journal = {Journal of Logical and Algebraic Methods in Programming},
	author = {De Gouw, Stijn and Mauro, Jacopo and Zavattaro, Gianluigi},
	month = oct,
	year = {2019},
	keywords = {Sciencedirect},
	pages = {108--135},
	file = {De Gouw et al. - 2019 - On the modeling of optimal and automatized cloud a.pdf:C\:\\Users\\antom\\Zotero\\storage\\KSWBCVTN\\De Gouw et al. - 2019 - On the modeling of optimal and automatized cloud a.pdf:application/pdf},
}

@inproceedings{di_cosmo_automated_2014,
	address = {Vasteras Sweden},
	title = {Automated synthesis and deployment of cloud applications},
	isbn = {978-1-4503-3013-8},
	url = {https://dl.acm.org/doi/10.1145/2642937.2642980},
	doi = {10.1145/2642937.2642980},
	abstract = {Complex networked applications are assembled by connecting software components distributed across multiple machines. Building and deploying such systems is a challenging problem which requires a signiÔ¨Åcant amount of expertise: the system architect must ensure that all component dependencies are satisÔ¨Åed, avoid conÔ¨Çicting components, and add the right amount of component replicas to account for quality of service and fault-tolerance. In a cloud environment, one also needs to minimize the virtual resources provisioned upfront, to reduce the cost of operation. Once the full architecture is designed, it is necessary to correctly orchestrate the deployment phase, to ensure all components are started and connected in the right order.},
	language = {en},
	urldate = {2024-07-24},
	booktitle = {Proceedings of the 29th {ACM}/{IEEE} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {ACM},
	author = {Di Cosmo, Roberto and Lienhardt, Michael and Treinen, Ralf and Zacchiroli, Stefano and Zwolakowski, Jakub and Eiche, Antoine and Agahi, Alexis},
	month = sep,
	year = {2014},
	keywords = {ACM},
	pages = {211--222},
	file = {Di Cosmo et al. - 2014 - Automated synthesis and deployment of cloud applic.pdf:C\:\\Users\\antom\\Zotero\\storage\\8IXMR35D\\Di Cosmo et al. - 2014 - Automated synthesis and deployment of cloud applic.pdf:application/pdf},
}

@article{willnecker_multi-objective_2018,
	title = {Multi-{Objective} {Optimization} of {Deployment} {Topologies} for {Distributed} {Applications}},
	volume = {18},
	issn = {1533-5399, 1557-6051},
	url = {https://dl.acm.org/doi/10.1145/3106158},
	doi = {10.1145/3106158},
	abstract = {Modern applications are typically implemented as distributed systems comprising several components. Deciding where to deploy which component is a difficult task that today is usually assisted by logical topology recommendations. Choosing inefficient topologies allocates the wrong amount of resources, leads to unnecessary operation costs, or results in poor performance. Testing different topologies to find good solutions takes a lot of time and might delay productive operations. Therefore, this work introduces a software-based deployment topology optimization approach for distributed applications. We use an enhanced performance model generator that extracts models from operational monitoring data of running applications. The extracted model is used to simulate performance metrics (e.g., resource utilization, response times, throughput) and runtime costs of distributed applications. Subsequently, we introduce a deployment topology optimizer, which selects an optimized topology for a specified workload and considers on-premise, cloud, and hybrid topologies. The following three optimization goals are presented in this work: (i) minimum response time for an optimized user experience, (ii) approximate resource utilization around certain peaks, and (iii) minimum cost for running the application. To evaluate the approach, we use the SPECjEnterpriseNEXT industry benchmark as distributed application in an on-premise and in a cloud/on-premise hybrid environment. The evaluation demonstrates the accuracy of the simulation compared to the actual deployment by deploying an optimized topology and comparing measurements with simulation results.},
	language = {en},
	number = {2},
	urldate = {2024-07-24},
	journal = {ACM Transactions on Internet Technology},
	author = {Willnecker, Felix and Krcmar, Helmut},
	month = may,
	year = {2018},
	keywords = {ACM},
	pages = {1--21},
	file = {Willnecker and Krcmar - 2018 - Multi-Objective Optimization of Deployment Topolog.pdf:C\:\\Users\\antom\\Zotero\\storage\\M4P7PVBD\\Willnecker and Krcmar - 2018 - Multi-Objective Optimization of Deployment Topolog.pdf:application/pdf},
}
@incollection{li_performance_2020,
	address = {Singapore},
	title = {Performance {Optimization} of {Cloud} {Application} at {Software} {Architecture} {Level}},
	volume = {1205},
	isbn = {9789811555763 9789811555770},
	url = {http://link.springer.com/10.1007/978-981-15-5577-0_58},
	abstract = {Due to the limited search space in the existing performance optimization approaches at software architectures of cloud applications (SAoCA) level, it is difÔ¨Åcult for these methods to obtain the cloud resource usage scheme with optimal cost-performance ratio. Aiming at this problem, this paper Ô¨Årstly deÔ¨Ånes a performance optimization model called CAPOM that can enlarge the search space effectively. Secondly, an efÔ¨Åcient differential evolutionary optimization algorithm named MODE4CA is proposed to solve the CAPOM model by deÔ¨Åning evolutionary operators with strategy pool and repair mechanism. Further, a method for optimizing performance at SAoCA level, called POM4CA is derived. Finally, two problem instances with different sizes are taken to conduct the experiments for comparing POM4CA with the current representative method under the light and heavy workload. The experimental results show that POM4CA method can obtain better response time and spend less cost of cloud resources.},
	language = {en},
	urldate = {2024-08-27},
	booktitle = {Artificial {Intelligence} {Algorithms} and {Applications}},
	publisher = {Springer Singapore},
	author = {Du, Xin and Ni, Youcong and Ye, Peng and Wang, Xin and Xiao, Ruliang},
	editor = {Li, Kangshun and Li, Wei and Wang, Hui and Liu, Yong},
	year = {2020},
	doi = {10.1007/978-981-15-5577-0_58},
	note = {Series Title: Communications in Computer and Information Science},
	keywords = {Springer},
	pages = {724--738},
	file = {Du et al. - 2020 - Performance Optimization of Cloud Application at S.pdf:C\:\\Users\\antom\\Zotero\\storage\\5BZJU32J\\Du et al. - 2020 - Performance Optimization of Cloud Application at S.pdf:application/pdf},
}

@article{ciavotta_mixed_2017,
	title = {A mixed integer linear programming optimization approach for multi-cloud capacity allocation},
	volume = {123},
	issn = {01641212},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121216301996},
	doi = {10.1016/j.jss.2016.10.001},
	language = {en},
	urldate = {2024-08-13},
	journal = {Journal of Systems and Software},
	author = {Ciavotta, Michele and Ardagna, Danilo and Gibilisco, Giovanni Paolo},
	month = jan,
	year = {2017},
	keywords = {Sciencedirect},
	pages = {64--78},
	file = {Ciavotta et al. - 2017 - A mixed integer linear programming optimization ap.pdf:C\:\\Users\\antom\\Zotero\\storage\\GDXQLVCB\\Ciavotta et al. - 2017 - A mixed integer linear programming optimization ap.pdf:application/pdf},
}

@inproceedings{cortellessa_exploring_2024,
	title = {Exploring {Sustainable} {Alternatives} for the {Deployment} of {Microservices} {Architectures} in the {Cloud}},
	url = {https://ieeexplore.ieee.org/document/10592774},
	doi = {10.1109/ICSA59870.2024.00012},
	abstract = {As organizations increasingly migrate their applications to the cloud, the optimization of microservices architectures becomes imperative for achieving sustainability goals. Nonetheless, sustainable deployments may increase costs and deteriorate performance, thus the identification of optimal trade-offs among these conflicting requirements is a key objective not easy to achieve. This paper introduces a novel approach to support cloud deployment of microservices architectures by targeting optimal combinations of application performance, deployment costs, and power consumption. By leveraging genetic algorithms, specifically NSGA-II, we automate the generation of alternative architectural deployments. The results demonstrate the potential of our approach through a comprehensive assessment of the Train Ticket case study.},
	urldate = {2024-11-27},
	booktitle = {2024 {IEEE} 21st {International} {Conference} on {Software} {Architecture} ({ICSA})},
	author = {Cortellessa, Vittorio and Di Pompeo, Daniele and Tucci, Michele},
	month = jun,
	year = {2024},
	note = {ISSN: 2835-7043},
	keywords = {IEEE Explore, Computer architecture, Software architecture, Costs, Microservice architectures, model-driven engineering, Organizations, performance, Power demand, refactoring, search-based software engineering, sustainability, System performance},
	pages = {34--45},
	file = {Full Text PDF:C\:\\Users\\antom\\Zotero\\storage\\PV6E4XQD\\Cortellessa et al. - 2024 - Exploring Sustainable Alternatives for the Deployment of Microservices Architectures in the Cloud.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\antom\\Zotero\\storage\\LGM359P5\\10592774.html:text/html},
}
@inproceedings{willnecker_optimization_2016,
	address = {Venice},
	title = {Optimization of {Deployment} {Topologies} for {Distributed} {Enterprise} {Applications}},
	isbn = {978-1-5090-2567-1},
	url = {https://ieeexplore.ieee.org/document/7515441/},
	doi = {10.1109/QoSA.2016.11},
	abstract = {Enterprise applications are typically implemented as distributed systems composed of several components. Deciding where to deploy which component is a difÔ¨Åcult task that today is usually assisted by logical topology recommendations. Choosing inefÔ¨Åcient topologies allocates the wrong amount of resources, leads to unnecessary operation costs, or results in poor performance. Testing different topologies to Ô¨Ånd good solutions takes a lot of time and might delay productive operations. Therefore, this work introduces a software based deployment topology optimization approach for distributed enterprise applications. We use an enhanced performance model generator that extracts models from running applications. The extracted model is used to simulate performance metrics (e.g., resource utilization, response times, throughput) of an enterprise application. Subsequently, we introduce a deployment topology optimizer, which selects an optimized topology for a speciÔ¨Åed workload. The following two optimization goals are presented in this work: (i) minimum response time for an optimized user experience and (ii) maximize resource utilization for cost-effective topologies. To evaluate the approach we use the SPECjEnterpriseNEXT industry benchmark as distributed enterprise application. The evaluation demonstrates the accuracy of the simulation compared to the actual deployment and the pre-eminence of the selected topology compared to runner-up topologies.},
	language = {en},
	urldate = {2024-09-06},
	booktitle = {2016 12th {International} {ACM} {SIGSOFT} {Conference} on {Quality} of {Software} {Architectures} ({QoSA})},
	publisher = {IEEE},
	author = {Willnecker, Felix and Krcmar, Helmut},
	month = apr,
	year = {2016},
	pages = {106--115},
	file = {Willnecker and Krcmar - 2016 - Optimization of Deployment Topologies for Distribu.pdf:C\:\\Users\\antom\\Zotero\\storage\\DX82XFIR\\Willnecker and Krcmar - 2016 - Optimization of Deployment Topologies for Distribu.pdf:application/pdf},
}

@inproceedings{ciavotta_palladio_2016,
	address = {Berlin, Germany},
	title = {Palladio {Optimization} {Suite}: {QoS} optimization for component-based {Cloud} applications},
	isbn = {978-1-63190-096-9},
	shorttitle = {Palladio {Optimization} {Suite}},
	url = {http://eudl.eu/doi/10.4108/eai.14-12-2015.2262562},
	doi = {10.4108/eai.14-12-2015.2262562},
	abstract = {One important issue in software engineering is to Ô¨Ånd an eÔ¨Äective way to deal with the increasing complexity of software computing system. Modern software applications have evolved in terms of size and scope. SpeciÔ¨Åc tools have been created to predict the Quality of Service (QoS) at designtime. However, the optimization of an architecture usually has to be done manually, resulting in an arduous and timeconsuming process. For this reason, we present the Palladio Optimization Suite (POS), a collection of complementary plugins realized to run atop Palladio Bench with the aim of automatizing the exploration of the space of possible architectures by means of advanced search paradigms.},
	language = {en},
	urldate = {2024-09-06},
	booktitle = {Proceedings of the 9th {EAI} {International} {Conference} on {Performance} {Evaluation} {Methodologies} and {Tools}},
	publisher = {ACM},
	author = {Ciavotta, Michele and Ardagna, Michele and Koziolek, Anne},
	year = {2016},
	file = {Ciavotta et al. - 2016 - Palladio Optimization Suite QoS optimization for .pdf:C\:\\Users\\antom\\Zotero\\storage\\PIYHI63P\\Ciavotta et al. - 2016 - Palladio Optimization Suite QoS optimization for .pdf:application/pdf},
}

@inproceedings{koziolek_peropteryx_2011,
	address = {Boulder Colorado USA},
	title = {{PerOpteryx}: automated application of tactics in multi-objective software architecture optimization},
	isbn = {978-1-4503-0724-6},
	shorttitle = {{PerOpteryx}},
	url = {https://dl.acm.org/doi/10.1145/2000259.2000267},
	doi = {10.1145/2000259.2000267},
	abstract = {Designing software architectures that exhibit a good tradeoÔ¨Ä between multiple quality attributes is hard. Even with a given functional design, many degrees of freedom in the software architecture (e.g. component deployment or server conÔ¨Åguration) span a large design space. In current practice, software architects try to Ô¨Ånd good solutions manually, which is time-consuming, can be error-prone and can lead to suboptimal designs. We propose an automated approach guided by architectural tactics to search the design space for good solutions. Our approach applies multi-objective evolutionary optimization to software architectures modelled with the Palladio Component Model. Software architects can then make well-informed trade-oÔ¨Ä decisions and choose the best architecture for their situation. To validate our approach, we applied it to the architecture models of two systems, a business reporting system and an industrial control system from ABB. The approach was able to Ô¨Ånd meaningful trade-oÔ¨Äs leading to signiÔ¨Åcant performance improvements or costs savings. The novel use of tactics decreased the time needed to Ô¨Ånd good solutions by up to 80\% .},
	language = {en},
	urldate = {2024-09-06},
	booktitle = {Proceedings of the joint {ACM} {SIGSOFT} conference -- {QoSA} and {ACM} {SIGSOFT} symposium -- {ISARCS} on {Quality} of software architectures -- {QoSA} and architecting critical systems -- {ISARCS}},
	publisher = {ACM},
	author = {Koziolek, Anne and Koziolek, Heiko and Reussner, Ralf},
	month = jun,
	year = {2011},
	pages = {33--42},
	file = {Koziolek et al. - 2011 - PerOpteryx automated application of tactics in mu.pdf:C\:\\Users\\antom\\Zotero\\storage\\KIQX54PK\\Koziolek et al. - 2011 - PerOpteryx automated application of tactics in mu.pdf:application/pdf},
}

@inproceedings{frey_search-based_2013,
	address = {San Francisco, CA, USA},
	title = {Search-based genetic optimization for deployment and reconfiguration of software in the cloud},
	isbn = {978-1-4673-3076-3 978-1-4673-3073-2},
	url = {http://ieeexplore.ieee.org/document/6606597/},
	doi = {10.1109/ICSE.2013.6606597},
	abstract = {Migrating existing enterprise software to cloud platforms involves the comparison of competing cloud deployment options (CDOs). A CDO comprises a combination of a speciÔ¨Åc cloud environment, deployment architecture, and runtime reconÔ¨Åguration rules for dynamic resource scaling. Our simulator CDOSim can evaluate CDOs, e.g., regarding response times and costs. However, the design space to be searched for wellsuited solutions is extremely huge. In this paper, we approach this optimization problem with the novel genetic algorithm CDOXplorer. It uses techniques of the search-based software engineering Ô¨Åeld and CDOSim to assess the Ô¨Åtness of CDOs. An experimental evaluation that employs, among others, the cloud environments Amazon EC2 and Microsoft Windows Azure, shows that CDOXplorer can Ô¨Ånd solutions that surpass those of other state-of-the-art techniques by up to 60\%. Our experiment code and data and an implementation of CDOXplorer are available as open source software.},
	language = {en},
	urldate = {2024-09-06},
	booktitle = {2013 35th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	publisher = {IEEE},
	author = {Frey, Soren and Fittkau, Florian and Hasselbring, Wilhelm},
	month = may,
	year = {2013},
	pages = {512--521},
	file = {Frey et al. - 2013 - Search-based genetic optimization for deployment a.pdf:C\:\\Users\\antom\\Zotero\\storage\\8Q6ZU5PV\\Frey et al. - 2013 - Search-based genetic optimization for deployment a.pdf:application/pdf},
}

@inproceedings{abraham_zephyrus2_2016,
	address = {Cham},
	title = {Zephyrus2: {On} the {Fly} {Deployment} {Optimization} {Using} {SMT} and {CP} {Technologies}},
	isbn = {978-3-319-47677-3},
	shorttitle = {Zephyrus2},
	doi = {10.1007/978-3-319-47677-3_15},
	abstract = {Modern cloud applications consist of software components deployed on multiple virtual machines. Deploying such applications is error prone and requires detailed system expertise. The deployment optimization problem is about how to configure and deploy applications correctly while at the same time minimizing resource cost on the cloud. This problem is addressed by tools such as Zephyrus, which take a declarative specification of the components and their configuration requirements as input and propose an optimal deployment. This paper presents Zephyrus2, a new tool which addresses deployment optimization by exploiting modern SMT and CP technologies to handle larger and more complex deployment scenarios. Compared to Zephyrus, Zephyrus2 can solve problems involving hundreds of components to be deployed on hundreds of virtual machines in a matter of seconds instead of minutes. This significant speed-up, combined with an improved specification format, enables Zephyrus2 to interactively support on the fly decision making.},
	language = {en},
	booktitle = {Dependable {Software} {Engineering}: {Theories}, {Tools}, and {Applications}},
	publisher = {Springer International Publishing},
	author = {√Åbrah√°m, Erika and Corzilius, Florian and Johnsen, Einar Broch and Kremer, Gereon and Mauro, Jacopo},
	editor = {Fr√§nzle, Martin and Kapur, Deepak and Zhan, Naijun},
	year = {2016},
	keywords = {Cloud Application, Cloud Provider, Constraint Optimization Problem, Deployment Scenario, Virtual Machine},
	pages = {229--245},
	file = {2016-setta-zephyrus.pdf:C\:\\Users\\antom\\Zotero\\storage\\AGMVZRC5\\2016-setta-zephyrus.pdf:application/pdf},
}

@inproceedings{li_cloudopt_2011,
	title = {{CloudOpt}: {Multi}-goal optimization of application deployments across a cloud},
	shorttitle = {{CloudOpt}},
	url = {https://ieeexplore.ieee.org/abstract/document/6103947},
	abstract = {CloudOpt is a comprehensive approach to find optimal deployments for large service centers and clouds. It uses a combination of bin-packing, mixed integer programming and performance models to make decisions affecting diverse and strongly interacting goals, including satisfaction of different service level agreements for many different applications (involving response time, workload, throughput), host memory requirements and availability, license costs and power consumption. It is scalable and extendable to new objectives.},
	urldate = {2024-11-23},
	booktitle = {2011 7th {International} {Conference} on {Network} and {Service} {Management}},
	author = {Li, Jim Zw and Woodside, Murray and Chinneck, John and Litoiu, Marin},
	month = oct,
	year = {2011},
	note = {ISSN: 2165-963X},
	keywords = {Heuristic algorithms, Licenses, Memory management, Optimization, Quality of service, Resource management, Throughput},
	pages = {1--9},
	file = {Full Text PDF:C\:\\Users\\antom\\Zotero\\storage\\PESBEH8L\\Li et al. - 2011 - CloudOpt Multi-goal optimization of application deployments across a cloud.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\antom\\Zotero\\storage\\IXMBGDUX\\6103947.html:text/html},
}

@inproceedings{ashraf_multi-objective_2015,
	address = {Limassol, Cyprus},
	title = {A {Multi}-objective {ACS} {Algorithm} to {Optimize} {Cost}, {Performance}, and {Reliability} in the {Cloud}},
	isbn = {978-0-7695-5697-0},
	url = {https://ieeexplore.ieee.org/document/7431429/},
	doi = {10.1109/UCC.2015.54},
	abstract = {In this paper, we present a novel Multi-Objective Ant Colony System algorithm to optimize Cost, Performance, and Reliability (MOACS-CoPeR) in the cloud. The proposed algorithm provides a metaheuristic-based approach for the multiobjective cloud-based software component deployment problem. MOACS-CoPeR explores the search-space of architecture design alternatives with respect to several architectural degrees of freedom and produces a set of Pareto-optimal deployment conÔ¨Ågurations. We also present a Java-based implementation of our proposed algorithm and compare its results with the Nondominated Sorting Genetic Algorithm II (NSGA-II). We evaluate the two algorithms against a cloud-based storage service, which is loosely based on a real system.},
	language = {en},
	urldate = {2024-09-06},
	booktitle = {2015 {IEEE}/{ACM} 8th {International} {Conference} on {Utility} and {Cloud} {Computing} ({UCC})},
	publisher = {IEEE},
	author = {Ashraf, Adnan and Byholm, Benjamin and Porres, Ivan},
	month = dec,
	year = {2015},
	pages = {341--347},
	file = {PDF:C\:\\Users\\antom\\Zotero\\storage\\K4XSBQCD\\Ashraf et al. - 2015 - A Multi-objective ACS Algorithm to Optimize Cost, Performance, and Reliability in the Cloud.pdf:application/pdf},
}
